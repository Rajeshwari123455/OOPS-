3A

create an employee class by defining employee attributes such as name and salary as an instance variable and implementing behaviour using work() and show() instance methods.make salary as private variable

class Employee:
    def __init__(self, name, salary):
        self._name = name
        self.__salary = salary

    def work(self):
        print(f"{self._name} is working.")

    def show(self):
        print(f"Employee: {self._name}")
        print(f"Salary: {self.__salary}")

employee1 = Employee("John Doe", 50000)


employee1.work()
employee1.show()



3b




create a class called as creditcard,make limit variable completely private to the outside of the class and balance should be accesible outside the class but not modifiable , since we dont want external code to arbitrarily modify the credict card balance.to achieve this make get_balnce() field public,however balance can only be modified via withdraw() and deposit() methods that have safeguard checks in place


class CreditCard:
    def __init__(self, limit):
        self.__limit = limit
        self.__balance = 0

    def get_balance(self):
        return self.__balance

    def deposit(self, amount):
        if amount > 0:
            self.__balance += amount
            print(f"Deposited ${amount}. New balance: ${self.__balance}")
        else:
            print("Invalid deposit amount. Please deposit a positive amount.")

    def withdraw(self, amount):
        if amount > 0 and amount <= self.__balance and amount <= self.__limit:
            self.__balance -= amount
            print(f"Withdrew ${amount}. New balance: ${self.__balance}")
        elif amount <= 0:
            print("Invalid withdrawal amount. Please withdraw a positive amount.")
        elif amount > self.__balance:
            print("Insufficient funds. Withdrawal amount exceeds the available balance.")
        elif amount > self.__limit:
            print("Withdrawal amount exceeds the credit limit.")

credit_card = CreditCard(limit=1000)

balance = credit_card.get_balance()
print(f"Current balance: ${balance}")

credit_card.deposit(500)

credit_card.withdraw(200)

new_balance = credit_card.get_balance()
print(f"Updated balance: ${new_balance}")
